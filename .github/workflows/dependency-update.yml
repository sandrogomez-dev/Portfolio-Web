name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Check for outdated packages
        run: |
          npm outdated || true
          npm outdated --json > outdated.json || true

      - name: Create issue if updates available
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let outdated = {};
            try {
              outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
            } catch (e) {
              console.log('No outdated packages found');
              return;
            }
            
            if (Object.keys(outdated).length === 0) {
              console.log('All dependencies are up to date!');
              return;
            }
            
            let body = '### ðŸ“¦ Dependency Updates Available\n\n';
            body += 'The following packages have updates available:\n\n';
            body += '| Package | Current | Latest | Type |\n';
            body += '|---------|---------|--------|------|\n';
            
            for (const [pkg, info] of Object.entries(outdated)) {
              body += `| ${pkg} | ${info.current} | ${info.latest} | ${info.type || 'dependencies'} |\n`;
            }
            
            body += '\n---\n\n';
            body += '**Recommended actions:**\n';
            body += '1. Review the changelog for breaking changes\n';
            body += '2. Update packages: `npm update`\n';
            body += '3. For major versions: `npm install <package>@latest`\n';
            body += '4. Test thoroughly before merging\n';
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“¦ Weekly Dependency Updates Available',
              body: body,
              labels: ['dependencies', 'maintenance']
            });

